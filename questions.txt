Etape 13 :
1.  Avec quelle partie du code avons-nous paramétré l'url d'appel /greeting ?
Cette partie est paramétrée dans le controller HelloWorldController.java dans la méthode greeting().

2. Avec quelle partie du code avons-nous choisi le fichier HTML à afficher ?
Le nom du template correspond au retour de la méthode greeting() dans le controller HelloWorldController.java.

3. Comment envoyons-nous le nom à qui nous disons bonjour avec le second lien ? 
Dans un premier temps, avec l'annotation @RequestParam, nous récupérons la valeur de la variable name dans l'url. On indique qu'elle n'est pas requise et que dans le cas ou elle est inexistante, on lui donne la valeur "World". Ensuite, on l'associe à la variable nomTemplate du template.

Etape 17 :
Une table ADDRESS a été créée avec tous les champs de la classe.

Etape 18 :
L'annotation Entity permet d'associer la classe Address avec une table ADRESS. L'Id est annoté Id permettant à Spring de savoir que c'est l'identifiant de la table. L'annotation GeneratedValue permet de générer automatiquement la valeur de l'identifiant dans la base de données. 
Une colonne est créée pour chaque attribut de la classe avec le même nom que l'attribut.

Etape 23 :
L'annotation @Autowired est utilisée pour l'injection de dépendance par type. L'injection de dépendance par type signifie que Spring recherche le bean qui correspond au type de la dépendance et l'injecte.